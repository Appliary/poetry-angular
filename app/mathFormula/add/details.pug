br
br
form

    label(for="varName")
        | {{ 'varName:' + $root.__module.name + ':field' | translate }}
    input#varName( type="text", ng-class='{error: badName($parent.input.varName)}', ng-model='$parent.input.varName')

    label(for="device")
        | {{ 'device:' + $root.__module.name + ':field' | translate }}
    input#device.fakeSelect(value="{{ $parent.input.device.kind?$parent.input.device.kind + ' ':'' }}{{ $parent.input.device.name }}", placeholder="{{'clickToSelect:device:mathformula'|translate}}", readonly, ng-click="tab('devices')", ng-if="!$parent.input.device || $parent.input.device.kind != 'tags'")
    div(ng-if="$parent.input.device.kind == 'tags'", style="width:60%;display:inline")
        span.unit(ng-repeat="(i, tag) in $parent.input.device.id ")
            input#device(value="t {{ tag }}", readonly)
            span(ng-click="rmTag(i)") &times;
        input#tag.fakeSelect(readonly, ng-click="tab('tag')", placeholder="{{'clickToSelect:device:mathformula'|translate}}" )

    label(for="type")
        | {{ 'measurement:' + $root.__module.name + ':field' | translate }}
    select#type(ng-disabled=' !$parent.input.device ', ng-model='$parent.input.type')
        option(ng-repeat='type in $parent.input.device.types', ng-value='type')
            | {{ type[0] }} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{ type[1] }}

    label(for="time")
        | {{ 'timeOffset:' + $root.__module.name + ':field' | translate }}
    span.unit
        input#time(ng-model="$parent.input.time", placeholder="{{'last:timeoffset:mathformula'|translate}}")
        span {{ 'days:unit' | translate }}

    label(for="curVal")
        | {{ 'currentValue:' + $root.__module.name + ':field' | translate }}
    input#curVal(readonly, value="{{inputValue}}")

    button(ng-click=' confirm( $parent.input ) ', ng-disabled="badName($parent.input.varName) || !$parent.input.device || !$parent.input.type").pull-right.lightButton
        | {{ 'addInput:' + $root.__module.name + ':button' | translate }}
